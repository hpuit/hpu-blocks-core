
// Define your base styles here
.hpu-blocks-media-text
	// This block's direction should not be manipulated by rtl, as the mediaPosition control does.
  /*!rtl:begin:ignore*/
  direction: ltr
  /*!rtl:end:ignore*/
  display: grid
  grid-template-columns: 50% 1fr
  grid-template-rows: auto
	// This block has customizable padding, border-box makes that more predictable.
  box-sizing: border-box

  &.has-media-on-the-right
    grid-template-columns: 1fr 50%

  &.is-vertically-aligned-top
  .hpu-blocks-media-text__content,
  .hpu-blocks-media-text__media
    align-self: start

.hpu-blocks-media-text,
.hpu-blocks-media-text.is-vertically-aligned-center
  .hpu-blocks-media-text__content,
  .hpu-blocks-media-text__media
    align-self: center

.hpu-blocks-media-text.is-vertically-aligned-bottom
  .hpu-blocks-media-text__content,
  .hpu-blocks-media-text__media
    align-self: end

.hpu-blocks-media-text .hpu-blocks-media-text__media
  /*!rtl:begin:ignore*/
  grid-column: 1
  grid-row: 1
  /*!rtl:end:ignore*/
  margin: 0

.hpu-blocks-media-text .hpu-blocks-media-text__content
  direction: ltr
  /*!rtl:begin:ignore*/
  grid-column: 2
  grid-row: 1
  /*!rtl:end:ignore*/
  padding: 0 8% 0 8%
  word-break: break-word

.hpu-blocks-media-text.has-media-on-the-right .hpu-blocks-media-text__media
  /*!rtl:begin:ignore*/
  grid-column: 2
  grid-row: 1
  /*!rtl:end:ignore*/

.hpu-blocks-media-text.has-media-on-the-right .hpu-blocks-media-text__content
  /*!rtl:begin:ignore*/
  grid-column: 1
  grid-row: 1
  /*!rtl:end:ignore*/

.hpu-blocks-media-text__media img,
.hpu-blocks-media-text__media video
  height: auto
  max-width: unset
  width: 100%
  vertical-align: middle

.hpu-blocks-media-text.is-image-fill .hpu-blocks-media-text__media
  height: 100%
  min-height: 250px
  background-size: cover

  & > a
  	display: block
  	height: 100%

  & img
	// The image is visually hidden but accessible to assistive technologies.
  	position: absolute
  	width: 1px
  	height: 1px
  	padding: 0
  	margin: -1px
  	overflow: hidden
  	clip: rect(0, 0, 0, 0)
  	border: 0

/*
* Here we here not able to use a mobile first CSS approach.
* Custom widths are set using inline styles, and on mobile,
* we need 100% width, so we use important to overwrite the inline style.
* If the style were set on mobile first, on desktop styles,
* we would have no way of setting the style again to the inline style.
*/
@media (max-width: #{ ($break-small) })
  .hpu-blocks-media-text.is-stacked-on-mobile
    grid-template-columns: 100% !important
    .hpu-blocks-media-text__media
      grid-column: 1
      grid-row: 1

    .hpu-blocks-media-text__content
      grid-column: 1
      grid-row: 2

// BEGIN: Media Queries
@media screen and (max-width: 768px)
  // Styles for screens smaller than 768px

@media screen and (min-width: 769px) and (max-width: 1024px)
  // Styles for screens between 769px and 1024px

@media screen and (min-width: 1025px)
  // Styles for screens larger than 1024px

// END: Media Queries
