
// Define your variables here

// Define your styles here
.hpu-blocks-cover-image,
.hpu-blocks-cover
  position: relative
  background-position: center center
  min-height: 430px
  display: flex
  justify-content: center
  align-items: center
  padding: 1em
	// Prevent the `hpu-blocks-cover__background` span from overflowing the container when border-radius is applied.
	// `overflow: hidden` is provided as a fallback for browsers that don't support `overflow: clip`.
  overflow: hidden
	// Use clip instead of overflow: hidden so that sticky position works on child elements.
  overflow: clip
	// This block has customizable padding, border-box makes that more predictable.
  box-sizing: border-box
	// Keep the flex layout direction to the physical direction (LTR) in RTL languages.
  /*rtl:raw: direction: ltr; */

  /**
	 * Set a default background color for has-background-dim _unless_ it includes another
	 * background-color class (e.g. has-green-background-color). The presence of another
	 * background-color class implies that another style will provide the background color
	 * for the overlay.
	 *
	 * See:
	 *   - Issue with background color specificity: https://github.com/WordPress/gutenberg/issues/26545
	 *   - Issue with alternative fix: https://github.com/WordPress/gutenberg/issues/26545
	 */

	// the first selector is required for old Cover markup
  &.has-background-dim:not([class*="-background-color"]),
  .has-background-dim:not([class*="-background-color"])
    background-color: $black

  .has-background-dim.has-background-gradient
    background-color: transparent

	// the first selector is required for old Cover markup
  &.has-background-dim::before
    content: ""
    background-color: inherit

	// The first selector is required for old Cover markup/
	// Keep .hpu-blocks-cover__gradient-background for v8 deprecation.
  &.has-background-dim:not(.has-background-gradient)::before,
  .hpu-blocks-cover__background,
  .hpu-blocks-cover__gradient-background
    position: absolute
    top: 0
    left: 0
    bottom: 0
    right: 0
    z-index: z-index(".hpu-blocks-cover.has-background-dim::before")
    opacity: 0.5

	// The following styles are needed to support legacy blocks added prior to the update
	// that moved opacity to a nested span.
	// https://github.com/WordPress/gutenberg/pull/35065
	// https://github.com/WordPress/gutenberg/pull/38362
  @for $i from 1 through 10
    &.has-background-dim.has-background-dim-#{ $i * 10 }
      &:not(.has-background-gradient)::before,
      .hpu-blocks-cover__background,
      .hpu-blocks-cover__gradient-background
        opacity: $i * 0.1

  @for $i from 0 through 10
		// Keep .hpu-blocks-cover__gradient-background for v8 deprecation
    .hpu-blocks-cover__gradient-background.has-background-dim.has-background-dim-#{ $i * 10 },
    .hpu-blocks-cover__background.has-background-dim.has-background-dim-#{ $i * 10 }
      opacity: $i * 0.1

	// Apply max-width to floated items that have no intrinsic width
  &.alignleft,
  &.alignright
    max-width: $content-width * 0.5
    width: 100%

	// Using flexbox without an assigned height property breaks vertical center alignment in IE11.
	// Appending an empty ::after element tricks IE11 into giving the cover image an implicit height, which sidesteps this issue.
  &::after
    display: block
    content: ""
    font-size: 0
    min-height: inherit

		// IE doesn't support flex so omit that.
    @supports (position: sticky)
      content: none

	// Aligned cover blocks should not use our global alignment rules
  &.aligncenter,
  &.alignleft,
  &.alignright
    display: flex

  .hpu-blocks-cover__inner-container
    width: 100%
    z-index: z-index(".hpu-blocks-cover__inner-container")
    color: inherit
		// Reset the fixed LTR direction at the root of the block in RTL languages.
    /*rtl:raw: direction: rtl; */

  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6
    &:where(:not(.has-text-color))
      color: inherit

	// Position: Top
  &.is-position-top-left
    align-items: flex-start
    justify-content: flex-start

  &.is-position-top-center
    align-items: flex-start
    justify-content: center

  &.is-position-top-right
    align-items: flex-start
    justify-content: flex-end

	// Position: Center
  &.is-position-center-left
    align-items: center
    justify-content: flex-start

  &.is-position-center-center
    align-items: center
    justify-content: center

  &.is-position-center-right
    align-items: center
    justify-content: flex-end

	// Position: Bottom
  &.is-position-bottom-left
    align-items: flex-end
    justify-content: flex-start

  &.is-position-bottom-center
    align-items: flex-end
    justify-content: center

  &.is-position-bottom-right
    align-items: flex-end
    justify-content: flex-end

  &.has-custom-content-position.has-custom-content-position
    &
      margin: 0

    &.is-position-top-left,
    &.is-position-top-right,
    &.is-position-center-left,
    &.is-position-center-right,
    &.is-position-bottom-left,
    &.is-position-bottom-right
      &
        margin: 0
        width: auto

	// Extra specificity for in edit mode where other styles would override it otherwise.
  .hpu-blocks-cover__image-background,
  video.hpu-blocks-cover__video-background
    position: absolute
    top: 0
    left: 0
    right: 0
    bottom: 0
    margin: 0
    padding: 0
    width: 100%
    height: 100%
    max-width: none
    max-height: none
    object-fit: cover
    outline: none
    border: none
    box-shadow: none

.hpu-blocks-cover-image,
.hpu-blocks-cover,
.hpu-blocks-cover__image-background,
video.hpu-blocks-cover__video-background
  &.has-parallax
    background-attachment: fixed
    background-size: cover
    background-repeat: no-repeat

		// Mobile Safari does not support fixed background attachment properly.
		// See also https://stackoverflow.com/questions/24154666/background-size-cover-not-working-on-ios
		// Chrome on Android does not appear to support the attachment at all: https://issuetracker.google.com/issues/36908439
    @supports (-webkit-touch-callout: inherit)
      background-attachment: scroll

		// Remove the appearance of scrolling based on OS-level animation preferences.
    @media (prefers-reduced-motion: reduce)
      background-attachment: scroll

  &.is-repeated
    background-repeat: repeat
    background-size: auto

.hpu-blocks-cover__video-background
    z-index: z-index("&")

.hpu-blocks-cover__image-background
    z-index: z-index("&")

// Styles below only exist to support older versions of the block.
// Versions that not had inner blocks and used an h2 heading had a section (and not a div) with a class hpu-blocks-cover-image (and not a hpu-blocks-cover).
// We are using the previous referred differences to target old versions.

section.hpu-blocks-cover-image h2,
.hpu-blocks-cover-image-text,
.hpu-blocks-cover-text
  color: $white
  a,
  a:hover,
  a:focus,
  a:active
    color: $white

.hpu-blocks-cover-image
.hpu-blocks-cover
  &.has-left-content
    justify-content: flex-start

  &.has-right-content
    justify-content: flex-end

section.hpu-blocks-cover-image.has-left-content > h2,
.hpu-blocks-cover-image.has-left-content .hpu-blocks-cover-image-text,
.hpu-blocks-cover.has-left-content .hpu-blocks-cover-text
  margin-left: 0
  text-align: left

section.hpu-blocks-cover-image.has-right-content > h2,
.hpu-blocks-cover-image.has-right-content .hpu-blocks-cover-image-text,
.hpu-blocks-cover.has-right-content .hpu-blocks-cover-text
  margin-right: 0
  text-align: right

section.hpu-blocks-cover-image > h2,
.hpu-blocks-cover-image .hpu-blocks-cover-image-text,
.hpu-blocks-cover .hpu-blocks-cover-text
  font-size: 2em
  line-height: 1.25
  z-index: 1
  margin-bottom: 0
  max-width: $content-width
  padding: 0.44em
  text-align: center

// If Cover block's text color has not been set adjust default color
// based on if overlay is light or not. The following styles leverage
// `:where` to allow for generic global styles that have a low specificity to
// still take precedence.

:where(.hpu-blocks-cover:not(.has-text-color)),
:where(.hpu-blocks-cover-image:not(.has-text-color))
  color: $white

:where(.hpu-blocks-cover.is-light:not(.has-text-color)),
:where(.hpu-blocks-cover-image.is-light:not(.has-text-color))
  color: $black

// Media queries
@media screen and (max-width: 768px)
  // Styles for screens smaller than 768px

@media screen and (max-width: 480px)
  // Styles for screens smaller than 480px

// More media queries if needed
